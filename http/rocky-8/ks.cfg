# This is a RedHat kickstart file
# It provides answers to the Centos installation process
# Documentation for this file can be found on these URLs
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
# https://docs.centos.org/en-US/centos/install-guide/Kickstart2/
# https://wiki.centos.org/TipsAndTricks/KickStart
# Use CD-ROM installation media
cdrom
text
firstboot --disabled
eula --agreed
lang en_UK.UTF-8 --addsupport=en_US
keyboard uk
network --bootproto=dhcp --onboot=on --device=eth0
rootpw --lock
firewall --disabled
selinux --permissive
timezone UTC
bootloader --location=mbr --append="net.ifnames=0 biosdevname=0"
skipx
repo --name="AppStream" --baseurl="http://download.rockylinux.org/pub/rocky/8.10/AppStream/x86_64/os/"
# Clear the diskzerombr
clearpart --all --initlabel

authselect select sssd with-faillock
reboot
user --name=vagrant --plaintext --password vagrant

%packages --ignoremissing --excludedocs
@core
openssh-clients
dnf-utils
open-vm-tools
python3.11

# unnecessary firmware
-aic94xx-firmware
-atmel-firmware
-b43-openfwwf
-bfa-firmware
-ipw2100-firmware
-ipw2200-firmware
-ivtv-firmware
-iwl*-firmware
-libertas-usb8388-firmware
-ql*-firmware
-rt61pci-firmware
-rt73usb-firmware
-xorg-x11-drv-ati-firmware
-zd1211-firmware
-cockpit
-quota
-alsa-*
-fprintd-pam
-intltool
-microcode_ctl
%end

%post
# sudo
echo "%vagrant ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/vagrant
chmod 0440 /etc/sudoers.d/vagrant
dnf makecache
dnf install epel-release -y
dnf makecache
dnf install -y sudo open-vm-tools perl
# Enable hyper-v daemons only if using hyper-v virtualization
if [ $(virt-what) == "hyperv" ]; then
    dnf -y install hyperv-daemons cifs-utils
    systemctl enable hypervvssd
    systemctl enable hypervkvpd
fi
# Since we disable consistent network naming, we need to make sure the eth0
# configuration file is in place so it will come up.
# Delete other network configuration first because RHEL/C7 networking will not
# restart successfully if there are configuration files for devices that do not
# exist.
rm -f /etc/sysconfig/network-scripts/ifcfg-e*
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << _EOF_
TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
BOOTPROTO=dhcp
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
NAME=eth0
DEVICE=eth0
ONBOOT=yes
_EOF_

systemctl enable vmtoolsd
systemctl start vmtoolsd
%end
reboot --eject