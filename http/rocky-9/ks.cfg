# This is a RedHat kickstart file
# It provides answers to the Centos installation process
# Documentation for this file can be found on these URLs
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax
# https://docs.centos.org/en-US/centos/install-guide/Kickstart2/
# https://wiki.centos.org/TipsAndTricks/KickStart

cdrom
lang en_UK.UTF-8 --addsupport=en_US
keyboard --xlayouts='gb'
network --bootproto=dhcp --onboot=on --device=ens192
rootpw --lock
firewall --disabled
selinux --permissive
timezone UTC
bootloader --location=mbr --append="net.ifnames=0 biosdevname=0"
text
skipx

# Clear the diskzerombr
clearpart --all --initlabel

# Use manual partitioning to create a single big partition
# required instead of autopart which is what bento does
# as autopart will limit the partition size to 50Gb even if --nohome is specified
part pv.008002 --size=1 --grow --ondisk=sda
volgroup VolGroup --pesize=4096 pv.008002
logvol swap --name=lv_swap --vgname=VolGroup --size=16000 --maxsize=16000
logvol /  --name=lv_root --vgname=VolGroup --fstype=xfs --grow --size=1
part /boot --fstype=ext4 --size=1000

repo --name="AppStream" --baseurl="http://download.rockylinux.org/pub/rocky/9.6/AppStream/x86_64/os/"
auth --enableshadow --passalgo=sha512 --kickstart
firstboot --disabled
reboot --eject
user --name=vagrant --plaintext --password vagrant

%packages --ignoremissing --excludedocs
@core
openssh-clients
dnf-utils
open-vm-tools
python3.11
-fprintd-pam
-intltool

# unnecessary firmware
-aic94xx-firmware
-alsa-firmware
-alsa-tools-firmware
-ivtv-firmware
-iwl100-firmware
-iwl105-firmware
-iwl135-firmware
-iwl1000-firmware
-iwl2000-firmware
-iwl2030-firmware
-iwl3160-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6000g2b-firmware
-iwl6050-firmware
-iwl7260-firmware
-iwl7265-firmware
%end

%post
echo "Setting up sudo..."
mkdir -p /etc/sudoers.d
echo "%vagrant ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/vagrant
chmod 0440 /etc/sudoers.d/vagrant
dnf makecache
dnf install epel-release -y
dnf makecache
dnf install -y sudo open-vm-tools perl
# Enable hyper-v daemons only if using hyper-v virtualization
if [ $(virt-what) == "hyperv" ]; then
    echo "Enabling Hyper-V daemons..."
    dnf -y install hyperv-daemons cifs-utils
    systemctl enable hypervvssd
    systemctl enable hypervkvpd
fi

# Since we disable consistent network naming, we need to make sure the eth0
# configuration file is in place so it will come up.
# Delete other network configuration first because RHEL/C7 networking will not
# restart successfully if there are configuration files for devices that do not
# exist.
echo "Deploying configuration file for eth0..."
rm -f /etc/sysconfig/network-scripts/ifcfg-e*
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << _EOF_
TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
BOOTPROTO=dhcp
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
NAME=eth0
DEVICE=eth0
ONBOOT=yes
_EOF_
%end

reboot --eject
